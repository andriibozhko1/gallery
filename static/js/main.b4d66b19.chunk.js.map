{"version":3,"sources":["components/Pagination/Pagination.js","components/AlbumsList/AlbumsCard.js","components/Context/Context.js","components/Loader/Loader.js","components/AlbumsList/AlbumsList.js","components/TagsDropDown/TagsDropDown.js","components/PhotoList/PhotoCard.js","components/Header/Header.js","components/PhotoList/PhotoList.js","components/API/API.js","components/App/App.js","index.js"],"names":["Pagination","getCurrentPage","btn","_this","props","selectPage","changePages","currentPage","selectedPage","Math","max","min","paginationBtns","length","_this2","this","react_default","a","createElement","className","onClick","map","concat","key","visibleItems","quantityPaginationBtns","generalQuantityItems","buttons","start","end","i","push","Component","AlbumsCard","_props$album","album","id","title","Context","React","createContext","Loader","Fragment","AlbumsList","state","quantityItemsOnPage","visibleAlbums","albums","setState","window","scrollTo","Context_Context","Consumer","isLoading","components_Loader_Loader","Link","to","AlbumsList_AlbumsCard","Pagination_Pagination_Pagination","startIndex","endIndex","slice","TagsDropDown","_ref","tags","hidden","dropDownIsOpen","tag","getTag","PhotoCard","togglerDropDown","photoData","updateData","color","randomColor","_this$props$photoData","url","src","alt","style","backgroundColor","components_TagsDropDown_TagsDropDown","Header","query","filterByTag","changeQuery","event","target","value","sendQuery","setFilterQuery","changeTagFilter","console","log","setFilterTag","onChange","onKeyPress","placeholder","type","PhotoList","filteredByTagName","photo","Header_Header_Header","visiblePhoto","PhotoCard_PhotoCard","filteredPhoto","_this3","filter","albumId","match","params","find","tagData","toLowerCase","includes","api","getAlbums","_getAlbums","Object","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","apply","arguments","getPhoto","_getPhoto","_callee2","_context2","App","Provider","Route","exact","path","component","ReactDOM","render","HashRouter","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.b4d66b19.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Pagination.scss\";\n\nexport default class Pagination extends Component {\n  get paginationBtns() {    \n    if (this.props.visibleItems.length > 0) {\n      const quantityPaginationBtns = this.props.generalQuantityItems / this.props.visibleItems.length;\n      const buttons = [];\n      const start = Math.max(1, this.props.currentPage - 5);\n      const end = Math.min(quantityPaginationBtns,this.props.currentPage + 5);\n\n      for (let i = start; i <= end; i++) {        \n        buttons.push(i);\n      }      \n      return buttons;    \n    } else {\n      return [];\n    }\n  }\n\n  getCurrentPage = btn => () => this.props.selectPage(btn);\n\n  changePages = currentPage => {\n    return () => {\n      let selectedPage = Math.max(1,Math.min(this.paginationBtns.length, currentPage));\n      this.props.selectPage(selectedPage);\n    };\n  };\n\n  render() { \n    return (\n      <div className=\"Pagination\">\n        <button className=\"Pagination__btns\" onClick={this.changePages(this.props.currentPage - 1)}>\n          Prev\n        </button>\n        {this.props.currentPage > 5 ? '...' : ''}\n        {this.paginationBtns.map(btn => (\n          <button \n            className={`Pagination__btns ${ btn === this.props.currentPage ? \"Pagination__btns--active\" : \"\" }`}\n            key={btn} \n            onClick={this.getCurrentPage(btn)}>\n              {btn}\n          </button>\n        ))}      \n        {this.paginationBtns.length > 5 ? '...' : ''}\n        <button className=\"Pagination__btns\" onClick={this.changePages(this.props.currentPage + 1)} >        \n          Next\n        </button>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\n\nconst AlbumsCard = ( props ) => {\n  const { id, title } = props.album;\n\n  return (\n    <div className=\"AlbumsList__album-card\">\n      <div className=\"AlbumsList__content\">\n        <div className=\"AlbumsList__id\">Album #: { id }</div>\n        <br />\n        <div className=\"AlbumsList__album-card-title\"> { title }</div>\n      </div>\n    </div>\n  );\n}\nexport default AlbumsCard;\n","import React from \"react\";\n\nconst Context = React.createContext();\n\nexport default Context;\n","import React from \"react\";\nimport \"./Loader.scss\";\n\nconst Loader = () => {\n  return (\n    <>\n      <div id=\"cube-loader\">\n        <div className=\"caption\">\n          <div className=\"cube-loader\">\n            <div className=\"cube loader-1\" />\n            <div className=\"cube loader-2\" />\n            <div className=\"cube loader-4\" />\n            <div className=\"cube loader-3\" />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Loader;\n","import React, { Component } from \"react\";\nimport Pagination from \"../Pagination/Pagination\";\nimport AlbumsCard from \"./AlbumsCard\";\nimport Context from '../Context/Context'\nimport { Link } from \"react-router-dom\";\nimport \"./AlbumsList.scss\";\nimport Loader from '../Loader/Loader'\n\nexport default class AlbumsList extends Component { \n  state = {    \n    currentPage: 1,\n    quantityItemsOnPage: 20,\n    visibleAlbums: [],\n  }\n\n  albums = [];\n\n  get visibleAlbums () {    \n      const startIndex = (this.state.currentPage - 1) * this.state.quantityItemsOnPage;\n      const endIndex = startIndex + this.state.quantityItemsOnPage;\n      const visibleAlbums = this.albums.slice(startIndex, endIndex);\n\n      return visibleAlbums;\n  };\n\n  selectPage = (currentPage) => {\n    this.setState({ currentPage });\n  }\n\n  render() {     \n    window.scrollTo(0, 0);\n    return (\n      <Context.Consumer>\n          {(props) =>  {\n            this.albums = props.albums;\n\n            if(props.isLoading) {              \n             return  <Loader />\n            } else {\n              return (\n                <>\n                  <div className=\"AlbumsList\">\n                    <ul className=\"AlbumsList__list\">\n                      {this.visibleAlbums.map(album => (\n                        <Link key={album.id}  to={`albums/${album.id}`}>\n                          <li className=\"AlbumsList__item\">\n                            <AlbumsCard album={album}/>\n                          </li>\n                        </Link>\n                      ))}\n                    </ul>\n                  </div>\n                  <Pagination \n                    currentPage={this.state.currentPage} \n                    visibleItems={this.visibleAlbums} \n                    generalQuantityItems={props.albums.length}\n                    selectPage={this.selectPage}\n                  />\n                </>\n              )\n            }\n          }}\n      </Context.Consumer>\n    );\n  }\n}","import React from \"react\";\nimport Context from \"../Context/Context\";\nimport \"./TagsDropDown.scss\";\n\nconst TagsDropDown = props => (\n  <Context.Consumer>\n    {({ tags }) => (\n      <div hidden={!props.dropDownIsOpen} className=\"TagsDropDown\">\n        <ul className=\"TagsDropDown__list\">\n          {tags.map(tag => (\n            <div\n              key={tag}\n              onClick={props.getTag(tag)}\n              className=\"TagsDropDown__item\"\n            >\n              {tag}\n            </div>\n          ))}\n        </ul>\n      </div>\n    )}\n  </Context.Consumer>\n);\n\nexport default TagsDropDown;\n","import React, { Component } from \"react\";\nimport Context from \"../Context/Context\";\nimport TagsDropDown from \"../TagsDropDown/TagsDropDown\";\nimport randomColor from \"randomcolor\";\nimport \"./PhotoCard.scss\";\n\nexport default class PhotoCard extends Component {\n  state = {\n    dropDownIsOpen: false\n  };\n\n  togglerDropDown = () => {\n    this.setState(({ dropDownIsOpen }) => {\n      return {\n        dropDownIsOpen: !this.state.dropDownIsOpen\n      };\n    });\n  };\n\n  getTag = tag => {\n    return () => {\n      const id = this.props.photoData.id;\n\n      this.updateData({\n        id,\n        tag,\n        color: randomColor()\n      });\n      this.togglerDropDown();\n    };\n  };\n\n  render() {\n    const { url, title } = this.props.photoData;\n\n    return (\n      <Context.Consumer>\n        {props => {\n          this.updateData = props.updateData;\n\n          return (\n            <div>\n              <div className=\"PhotoCard\">\n                <div className=\"PhotoCard__img-block\">\n                  <img className=\"PhotoCard__img\" src={url} alt={title} />\n                </div>\n                <div className=\"PhotoCard__title\">{title}</div>\n                <div className=\"PhotoCard__tags-btn\" onClick={this.togglerDropDown}  >\n                  Add TAG\n                </div>\n                <div className=\"PhotoCard__tags-container\">\n                  <ul className=\"PhotoCard__tags-container-list\">\n                    {this.props.photoData.tags.map(tag => (\n                      <li key={tag.color} className=\"PhotoCard__tags-container-item\" style={{ backgroundColor: tag.color }} >\n                        <div className=\"PhotoCard__tags-container-item-dot\" />\n                        {tag.tag}\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n                <TagsDropDown dropDownIsOpen={this.state.dropDownIsOpen} getTag={this.getTag}/>\n              </div>\n            </div>\n          );\n        }}\n      </Context.Consumer>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport PropTypes from 'prop-types'\nimport Context from \"../Context/Context\";\nimport \"./Header.scss\";\n\nexport default class Header extends Component {\n  static propTypes = {\n    query: PropTypes.string.isRequired,\n  };\n  state = {\n    query: \"\",\n    filterByTag: null\n  };\n\n  changeQuery = () => {\n    return event => {\n      this.setState({\n        query: event.target.value\n      });\n    };\n  };\n\n  sendQuery = () => {\n    return key => {\n      if (key.key === \"Enter\") {\n        this.props.setFilterQuery(this.state.query);\n      }\n    };\n  };\n\n  changeTagFilter = () => {\n    return event => {\n      console.log(event.target);\n      this.setState(\n        {\n          filterByTag: event.target.value\n        },\n        () => this.props.setFilterTag(this.state.filterByTag)\n      );\n    };\n  };\n\n  render() {\n    return (\n      <Context.Consumer>\n        {({ tags }) => (\n          <div className=\"Header\">\n            <label className=\"Header__title\">\n              Search:\n              <input\n                className=\"Header__field\"\n                value={this.state.query}\n                onChange={this.changeQuery()}\n                onKeyPress={this.sendQuery()}\n                placeholder=\"Search something...\"\n                type=\"text\"\n              />\n            </label>\n            <span className=\"Header__title\">Sort By:</span>\n            <select className=\"Header__drop-down\" onChange={this.changeTagFilter()}>\n              <option value={\"null\"}>Reset</option>\n              {tags.map(tag => (\n                <option key={tag} value={tag}>\n                  {tag}\n                </option>\n              ))}\n            </select>\n          </div>\n        )}\n      </Context.Consumer>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport PropTypes from 'prop-types'\nimport Pagination from \"../Pagination/Pagination\";\nimport PhotoCard from \"./PhotoCard\";\nimport Context from \"../Context/Context\";\nimport Header from \"../Header/Header\";\nimport Loader from \"../Loader/Loader\"\nimport { Link } from \"react-router-dom\";\nimport \"./PhotoList.scss\";\n\nexport default class PhotoList extends Component {\n  static propTypes = {\n    currentPage:  PropTypes.number.isRequired,\n    quantityItemsOnPage: PropTypes.number.isRequired,\n    query: PropTypes.string.isRequired\n  }\n\n\n  state = {\n    currentPage: 1,\n    quantityItemsOnPage: 10,\n    filteredByTagName: null,\n    query: \"\"\n  };\n\n  photo = [];\n\n  get filteredPhoto() {\n    let filteredPhoto = this.photo.filter(photo =>\n      photo.albumId === +this.props.match.params.id ? photo : null\n    );\n    \n    if (this.state.filteredByTagName) {\n      filteredPhoto = filteredPhoto.filter(photo => {\n        if (photo.tags.length > 0) {\n          return photo.tags.find(tagData => {\n            if (tagData.tag === this.state.filteredByTagName) {\n              return tagData;\n            }\n          });\n        }\n      });\n    }\n\n    filteredPhoto = filteredPhoto.filter(photo => {\n      if (photo.title.toLowerCase().includes(this.state.query.toLowerCase())) {\n        return photo;\n      }\n    });\n\n    return filteredPhoto;\n  }\n\n  get visiblePhoto() {\n    const startIndex = (this.state.currentPage - 1) * this.state.quantityItemsOnPage;\n    const endIndex = startIndex + this.state.quantityItemsOnPage;\n    const visiblePhoto = this.filteredPhoto.slice(startIndex, endIndex);\n    \n    window.scrollTo(0, 0);\n    return visiblePhoto;\n  }\n\n  setFilterTag = tag => {\n    if (tag === \"null\") {\n      this.setState({ filteredByTagName: null });\n      return;\n    }\n\n    this.setState({ filteredByTagName: tag });\n  };\n\n  setFilterQuery = query => {\n    this.setState({ query });\n  };\n\n  selectPage = currentPage => {\n    this.setState({ currentPage });\n  };\n\n  render() {\n    return (\n      <Context.Consumer>\n        {props => {\n          this.photo = props.photo;\n\n          if (props.isLoading) {\n            return <Loader />;\n          } else {\n            return (\n              <>\n                <Link to=\"/\">\n                  <div className=\"PhotoList__btn-back\">Home</div>\n                </Link>\n                <Header setFilterTag={this.setFilterTag} setFilterQuery={this.setFilterQuery}/>\n                <div className=\"PhotoList\">\n                  <ul className=\"PhotoList__list\">\n                    {this.visiblePhoto.map(photo => (\n                      <li key={photo.id} className=\"PhotoList__item\">\n                        <PhotoCard photoData={photo} />\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n                <Pagination\n                  currentPage={this.state.currentPage}\n                  visibleItems={this.visiblePhoto}\n                  generalQuantityItems={this.filteredPhoto.length}\n                  selectPage={this.selectPage}\n                />\n              </>\n            );\n          }\n        }}\n      </Context.Consumer>\n    );\n  }\n}\n","const api = {\n   async getAlbums() {\n        const response = await fetch('https://jsonplaceholder.typicode.com/albums');\n\t      const albums = await response.json();\n\t      return albums;\n  },\n  async getPhoto() {\n    const response = await fetch('https://jsonplaceholder.typicode.com/photos');\n    const photo = await response.json();\n    return photo;\n  }\n}\n\nexport default api;","import React, { Component } from \"react\";\nimport PropTypes from 'prop-types'\nimport AlbumsList from \"../AlbumsList/AlbumsList\";\nimport PhotoList from \"../PhotoList/PhotoList\";\nimport Context from '../Context/Context'\nimport { Route } from \"react-router-dom\";\nimport api from \"../API/API\";\nimport \"normalize.css\";\n\nexport default class App extends Component {\n  static propTypes = {\n    albums: PropTypes.array.isRequired,\n    photo: PropTypes.array.isRequired,\n    isLoading: PropTypes.bool,\n  };\n\n  state = {\n    albums: [],\n    photo: [],\n    tags: [\"Frontend\", \"Backend\", \"Javascript\", \"React\",\"Node.js\",\"PHP\",\"C#\",\"Vue\",\"Angular\"],\n    filteredPhoto: null,\n    isLoading: true,\n  };\n\n\n  async componentDidMount() {\n    const albums = await api.getAlbums();\n    const photo = await api.getPhoto();\n    photo.map(photo => (photo.tags = []));\n\n    this.setState({ albums, photo, isLoading: false });\n  }  \n\n  updateData = photoData => {\n    this.setState(({ photo }) => {\n      photo[photoData.id - 1].tags.push(photoData);\n      return {\n        photo\n      };\n    });\n  };\n\n  render() {\n    return (\n      <>\n      <Context.Provider value={{ \n        tags: this.state.tags,\n        albums: this.state.albums,\n        photo: this.state.photo,\n        updateData: this.updateData,\n        isLoading: this.state.isLoading,\n       }}>\n        <Route exact path=\"/\" component={AlbumsList} />\n        <Route path=\"/albums/:id\" component={PhotoList}/>\n      </Context.Provider>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App/App\";\nimport { HashRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}